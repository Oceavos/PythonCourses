이번에는 문자열의 인덱싱과 슬라이싱에 대해 공부해보자.

인덱싱과 슬라이싱을 공부하기전에 필수로 알야아 하는 정보가 있다.

Hello, World!
위와같은 문자열이 있는데 프로그래밍에서는 위 문자열의 문자 자리를 하나하나 숫자로 매겨야 한다.

#  Hello, World!
#            1
#  0123456789012
눈치챘다면 위 숫자는 문자열의 문자마다 숫자를 매긴 것이다.

* 한가지 헷갈리는 부분이 있을 수 있는데, World밑에 l은 10이다.
정리를 해보자.

H는 0
e는 1
l은 2
l은 3
o는 4
,는 5
 은 6       # 공백이다!
W는 7
o는 8
r은 9
l은 10
d는 11
!는 12

이렇게 문자열의 문자마다 숫자를 매길 수 있다. 참고로 파이썬 프로그래밍에서는 첫 숫자는 0으로 시작한다.

그럼 파이썬을 키고 아래 명령어를 입력해보자.

>>> A = "Hello, World!"        # A 변수에 Hello, World! 라는 문자열을 저장
>>> A[0]                       # A변수에 등록된 문자열의 0번째 문자를 출력
'H'

위 명령어를 예제로 보면, A[0] 이라는 명령어를 처음 볼 수 있다.
A[0] 의 뜻은 A변수에 [0] 이라는, 즉 문자열의 가장 첫번째 문자를 출력하게 된다. 말했다싶이 파이썬은 첫번째를 0번부터 숫자를 센다.


>>> A = "Hello, World!"
>>> A[1]
'e'

>>> A[5]
','

>>> A[-1]
'!'

>>> A[-2]
'd'

위 명령어중 A[-1]을 볼 수 있을텐데, 눈치가 빠르다면 -1 은 거꾸로부터 센다는 뜻이다.
즉 거꾸로부터 첫번째인 ! 문자를 출력하게 된다. 왜 -0 이 아닌지에 대한 생각을 하는 독자가 있을 수 있지만, -0은 0과 똑같은 값이기때문이다.

그럼 응용해서 이제 슬라이싱을 하기위한 예제를 봐보자.

# 슬라이싱

>>> A = "Hello, World!"
>>> A[0] + A[1] + A[2] + A[3] + A[4]           # A의 0번째, 1번째 2번째 3번째 4번째에 위치한 값들을 모두 더한다.
'Hello'

위처럼 문자열을 잘라내어 합칠 수 있다. 다른 방법으로 슬라이싱이 가능하다.
그럼 다음 예제를 보자.

>>> A = "Hello, World!"
>>> A[0:5]        # A문자열의 0번째부터 4번째까지의 문자열를 알려달라
'Hello'

여기서 A[0:5] 인데 5번째까지가 아닌 4번째인가
부등식으로 표현해보자면,

0 <= A < 5

이다.

0이상 5미만 이란 뜻의 5미만은 5를 미포함 한다는 뜻이다. 그러므로 A[0:5]는 Hello 라는 값이 된다.

다른 예제로

>>> A = "Hello, World!"
>>> A[7:]                  # A문자열의 7번째자리부터는 모조리 출력하라
'World!'

위와 같은 소스코드는 7: 뒤에 아무것도 오지 않으면서 7번째를 포함한 뒤의 모든 문자를 출력하라는 명령어이다.
그럼 그 반대로

>>> A = "Hello, World!'
>>> A[:5]                 # A문자열의 5번째를 포함하지않고 5번째 아래의 문자를 모조리 출력하라
'Hello'

:5로 5번째 문자를 미포함한 아래의 모든 문자를 출력하는 것을 볼 수 있다.

여기까지 이해했다면 문자열의 인덱싱과 슬라이싱이 완성된 것 이다.

응용으로 예제 소스코드를 작성해보자.

- 이름과 국적을 슬라이싱해보자.
>>> A = "SeongJinHongSouthKorea"   # 이름과 국적을 변수 A에 등록
>>> name = A[0:12]
>>> nationality = A[12:]
>>> name
SeongJinHong

>>> nationality
SouthKorea

여기까지 인덱싱과 슬라이싱에 대해 알아보았다. 다음에는 문자열 함수들에 대해 알아보도록 하자.
